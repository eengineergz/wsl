"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Deferred {
    constructor() {
        let escapedResolve;
        let escapedReject;
        this.promise = new Promise((resolve, reject) => {
            escapedResolve = resolve;
            escapedReject = reject;
        });
        this.setValue = escapedResolve;
        this.reject = escapedReject;
    }
}
exports.Deferred = Deferred;
class Barrier {
    constructor() {
        const d = new Deferred();
        this.onUnlocked = d.promise;
        this.unlock = d.setValue;
        this.reject = d.reject;
    }
}
exports.Barrier = Barrier;
class ProducerConsumer {
    constructor() {
        this.barriers = [];
        this.nextBarriers = [];
    }
    popOrNext() {
        let b = this.barriers.shift();
        if (!b) {
            b = new Deferred();
            this.nextBarriers.push(b);
        }
        return b;
    }
    produce(value) {
        this.popOrNext().setValue(value);
    }
    rejectSingle(reason) {
        this.popOrNext().reject(reason);
    }
    consume() {
        let b = this.nextBarriers.shift();
        if (!b) {
            b = new Deferred();
            this.barriers.push(b);
        }
        return b.promise;
    }
}
exports.ProducerConsumer = ProducerConsumer;
//# sourceMappingURL=synchronization.js.map